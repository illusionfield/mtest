name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

jobs:
  build:
    name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            ext: ""
          - goos: linux
            goarch: arm64
            ext: ""
          - goos: darwin
            goarch: amd64
            ext: ""
          - goos: darwin
            goarch: arm64
            ext: ""
          - goos: windows
            goarch: amd64
            ext: ".exe"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: release-${{ matrix.goos }}-${{ matrix.goarch }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            release-${{ matrix.goos }}-${{ matrix.goarch }}-
            release-

      - name: Lint
        run: make lint

      - name: Run tests
        run: make test

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
          VERSION: ${{ github.ref_name }}
          COMMIT: ${{ github.sha }}
          EXT: ${{ matrix.ext }}
        run: |
          mkdir -p dist
          BIN="mtest${EXT}"
          go build -trimpath -ldflags "-s -w -X main.Version=${VERSION} -X main.Commit=${COMMIT}" -o "${BIN}" ./cmd/mtest
          ARCHIVE="dist/mtest_${GOOS}_${GOARCH}"
          if [ "${GOOS}" = "windows" ]; then
            ARCHIVE="${ARCHIVE}.zip"
            zip -j "${ARCHIVE}" "${BIN}"
          else
            ARCHIVE="${ARCHIVE}.tar.gz"
            tar -czf "${ARCHIVE}" "${BIN}"
          fi
          rm -f "${BIN}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mtest-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/mtest_${{ matrix.goos }}_${{ matrix.goarch }}.*

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten artifact directory
        run: |
          mkdir -p upload
          find dist -maxdepth 2 -type f -print -exec mv {} upload/ \;

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: upload/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
